// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meta.proto

package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LimiterMetaV2 struct {
	Value                map[string]*M `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LimiterMetaV2) Reset()         { *m = LimiterMetaV2{} }
func (m *LimiterMetaV2) String() string { return proto.CompactTextString(m) }
func (*LimiterMetaV2) ProtoMessage()    {}
func (*LimiterMetaV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_51590c2f3e09ff59, []int{0}
}
func (m *LimiterMetaV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LimiterMetaV2.Unmarshal(m, b)
}
func (m *LimiterMetaV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LimiterMetaV2.Marshal(b, m, deterministic)
}
func (dst *LimiterMetaV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LimiterMetaV2.Merge(dst, src)
}
func (m *LimiterMetaV2) XXX_Size() int {
	return xxx_messageInfo_LimiterMetaV2.Size(m)
}
func (m *LimiterMetaV2) XXX_DiscardUnknown() {
	xxx_messageInfo_LimiterMetaV2.DiscardUnknown(m)
}

var xxx_messageInfo_LimiterMetaV2 proto.InternalMessageInfo

func (m *LimiterMetaV2) GetValue() map[string]*M {
	if m != nil {
		return m.Value
	}
	return nil
}

type M struct {
	RcTypeId             *PB_Bytes  `protobuf:"bytes,1,opt,name=rcTypeId,proto3" json:"rcTypeId,omitempty"`
	Quota                *PB_Uint32 `protobuf:"bytes,2,opt,name=quota,proto3" json:"quota,omitempty"`
	CanBorrow            *PB_Queue  `protobuf:"bytes,3,opt,name=canBorrow,proto3" json:"canBorrow,omitempty"`
	Recycled             *PB_Queue  `protobuf:"bytes,4,opt,name=recycled,proto3" json:"recycled,omitempty"`
	Used                 *PB_Map    `protobuf:"bytes,5,opt,name=used,proto3" json:"used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *M) Reset()         { *m = M{} }
func (m *M) String() string { return proto.CompactTextString(m) }
func (*M) ProtoMessage()    {}
func (*M) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_51590c2f3e09ff59, []int{1}
}
func (m *M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_M.Unmarshal(m, b)
}
func (m *M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_M.Marshal(b, m, deterministic)
}
func (dst *M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_M.Merge(dst, src)
}
func (m *M) XXX_Size() int {
	return xxx_messageInfo_M.Size(m)
}
func (m *M) XXX_DiscardUnknown() {
	xxx_messageInfo_M.DiscardUnknown(m)
}

var xxx_messageInfo_M proto.InternalMessageInfo

func (m *M) GetRcTypeId() *PB_Bytes {
	if m != nil {
		return m.RcTypeId
	}
	return nil
}

func (m *M) GetQuota() *PB_Uint32 {
	if m != nil {
		return m.Quota
	}
	return nil
}

func (m *M) GetCanBorrow() *PB_Queue {
	if m != nil {
		return m.CanBorrow
	}
	return nil
}

func (m *M) GetRecycled() *PB_Queue {
	if m != nil {
		return m.Recycled
	}
	return nil
}

func (m *M) GetUsed() *PB_Map {
	if m != nil {
		return m.Used
	}
	return nil
}

type BorrowRecord struct {
	ClientID             *PB_Bytes  `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	RcID                 *PB_String `protobuf:"bytes,2,opt,name=rcID,proto3" json:"rcID,omitempty"`
	BorrowAt             *PB_Int64  `protobuf:"bytes,3,opt,name=borrowAt,proto3" json:"borrowAt,omitempty"`
	ExpireAt             *PB_Int64  `protobuf:"bytes,4,opt,name=expireAt,proto3" json:"expireAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BorrowRecord) Reset()         { *m = BorrowRecord{} }
func (m *BorrowRecord) String() string { return proto.CompactTextString(m) }
func (*BorrowRecord) ProtoMessage()    {}
func (*BorrowRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_51590c2f3e09ff59, []int{2}
}
func (m *BorrowRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BorrowRecord.Unmarshal(m, b)
}
func (m *BorrowRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BorrowRecord.Marshal(b, m, deterministic)
}
func (dst *BorrowRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BorrowRecord.Merge(dst, src)
}
func (m *BorrowRecord) XXX_Size() int {
	return xxx_messageInfo_BorrowRecord.Size(m)
}
func (m *BorrowRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_BorrowRecord.DiscardUnknown(m)
}

var xxx_messageInfo_BorrowRecord proto.InternalMessageInfo

func (m *BorrowRecord) GetClientID() *PB_Bytes {
	if m != nil {
		return m.ClientID
	}
	return nil
}

func (m *BorrowRecord) GetRcID() *PB_String {
	if m != nil {
		return m.RcID
	}
	return nil
}

func (m *BorrowRecord) GetBorrowAt() *PB_Int64 {
	if m != nil {
		return m.BorrowAt
	}
	return nil
}

func (m *BorrowRecord) GetExpireAt() *PB_Int64 {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

func init() {
	proto.RegisterType((*LimiterMetaV2)(nil), "v2.LimiterMetaV2")
	proto.RegisterMapType((map[string]*M)(nil), "v2.LimiterMetaV2.ValueEntry")
	proto.RegisterType((*M)(nil), "v2.M")
	proto.RegisterType((*BorrowRecord)(nil), "v2.BorrowRecord")
}

func init() { proto.RegisterFile("meta.proto", fileDescriptor_meta_51590c2f3e09ff59) }

var fileDescriptor_meta_51590c2f3e09ff59 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd2, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0x07, 0x70, 0xb6, 0x6d, 0x3e, 0xbe, 0x4e, 0x2c, 0x96, 0x3d, 0x85, 0xea, 0xa1, 0x16, 0x91,
	0x82, 0x98, 0xc3, 0x56, 0x44, 0xbc, 0x48, 0x4b, 0x3d, 0x04, 0x0c, 0xe8, 0xaa, 0xbd, 0x4a, 0xba,
	0x19, 0x24, 0xd8, 0x26, 0x71, 0x3b, 0xa9, 0xe6, 0xee, 0x5b, 0xf9, 0x20, 0xbe, 0x8e, 0x64, 0xd3,
	0x36, 0x68, 0xf5, 0x16, 0x66, 0x7e, 0xf9, 0xef, 0xfe, 0x61, 0x01, 0xe6, 0x48, 0x81, 0x9b, 0xea,
	0x84, 0x12, 0x5e, 0x5b, 0x8a, 0x8e, 0x4d, 0x79, 0x8a, 0x8b, 0x72, 0xd0, 0x7b, 0x67, 0xd0, 0xba,
	0x8e, 0xe6, 0x11, 0xa1, 0xf6, 0x91, 0x82, 0x89, 0xe0, 0x02, 0xac, 0x49, 0x30, 0xcb, 0xd0, 0x61,
	0xdd, 0x7a, 0xdf, 0x16, 0xfb, 0xee, 0x52, 0xb8, 0xdf, 0x84, 0x6b, 0xd6, 0x57, 0x31, 0xe9, 0x5c,
	0x96, 0xb4, 0x73, 0x09, 0x50, 0x0d, 0x79, 0x1b, 0xea, 0xcf, 0x98, 0x3b, 0xac, 0xcb, 0xfa, 0x4d,
	0x59, 0x7c, 0xf2, 0x3d, 0xb0, 0x96, 0x26, 0xb3, 0xd6, 0x65, 0x7d, 0x5b, 0x58, 0x45, 0xa6, 0x2f,
	0xcb, 0xd9, 0x45, 0xed, 0x9c, 0xf5, 0x3e, 0x19, 0x30, 0x9f, 0x1f, 0xc3, 0x7f, 0xad, 0xee, 0xf3,
	0x14, 0xbd, 0xd0, 0xfc, 0x6d, 0x8b, 0x5d, 0xb7, 0xbc, 0xec, 0xcd, 0xe8, 0x71, 0x94, 0x13, 0x2e,
	0xe4, 0x06, 0xf0, 0x23, 0xb0, 0x5e, 0xb2, 0x84, 0x82, 0x55, 0x66, 0xbb, 0x92, 0x0f, 0x51, 0x4c,
	0x03, 0x21, 0xcb, 0x35, 0x3f, 0x81, 0xa6, 0x0a, 0xe2, 0x51, 0xa2, 0x75, 0xf2, 0xea, 0xd4, 0x7f,
	0xa6, 0xde, 0x66, 0x98, 0xa1, 0xac, 0x84, 0xb9, 0x03, 0xaa, 0x5c, 0xcd, 0x30, 0x74, 0x1a, 0xbf,
	0xeb, 0x0d, 0xe0, 0x07, 0xd0, 0xc8, 0x16, 0x18, 0x3a, 0x96, 0x81, 0xad, 0x0a, 0xfa, 0x41, 0x2a,
	0xcd, 0xaa, 0xf7, 0xc1, 0x60, 0xa7, 0x8c, 0x96, 0xa8, 0x12, 0x1d, 0x16, 0x07, 0xa8, 0x59, 0x84,
	0x31, 0x79, 0xe3, 0x3f, 0x4b, 0xae, 0x01, 0x3f, 0x84, 0x86, 0x56, 0xde, 0x78, 0xbb, 0xe3, 0x1d,
	0xe9, 0x28, 0x7e, 0x92, 0x66, 0x5b, 0x44, 0x4e, 0xcd, 0x11, 0x43, 0xda, 0x6e, 0xe8, 0xc5, 0x74,
	0x76, 0x2a, 0x37, 0xa0, 0xc0, 0xf8, 0x96, 0x46, 0x1a, 0x87, 0xb4, 0x5d, 0x70, 0x85, 0xd7, 0x60,
	0xfa, 0xcf, 0xbc, 0x92, 0xc1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x82, 0xe1, 0x3f, 0x58, 0x44,
	0x02, 0x00, 0x00,
}
